start =
    expression

expression = atom / expressionList / quote

expressionList = lbracket  a:expression b:whitespace_expression* rbracket
  { return [a].concat(b); }

lbracket = whitespace* "(" whitespace*
rbracket = whitespace* ")" whitespace*

whitespace_expression = whitespace* a:expression {return a;}

atom =
    whitespace* chars:validchar+
        { return chars.join(""); }

whitespace = comment* whitespace_char+ comment*

quote = whitespace* "'" exp:expression
      { return ["quote", exp] ; }

comment = ";;" [^\n]*

validchar
    = [0-9a-zA-Z_?!+\-=@#$%^&*/.]

whitespace_char = [ \t] / newline

newline = "\n" / "\r\n"
